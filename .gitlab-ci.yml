stages:
  - build
  - test
  - sonarcloud
  - deploy

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  GIT_DEPTH: "0"  # Para o Sonar funcionar corretamente com hist√≥rico
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip
    - .sonar/cache

build-job:
  stage: build
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."

test-job:
  stage: test
  image: python:3.10
  script:
    - pip install -r requirements.txt
    - pip install pytest pytest-cov
    - pytest --cov=app --cov-report=xml
    # Ajusta paths no coverage.xml para o ambiente Linux do runner (relativo)
    - sed -i 's|C:/Users/Pedro/PycharmProjects/ExternoAPI/|app/|g' coverage.xml
  artifacts:
    paths:
      - coverage.xml
      - .pytest_cache/
      - app/

onarcloud-check:
  stage: sonarcloud
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  dependencies:
    - test-job
  script:
    - |
      sonar-scanner \
        -Dsonar.projectKey=pedrohenriqueque-group_ExternoAPI \
        -Dsonar.organization=pedrohenriqueque-group \
        -Dsonar.sources=app \
        -Dsonar.python.version=3.10 \
        -Dsonar.python.coverage.reportPaths=coverage.xml \
        -Dsonar.sourceEncoding=UTF-8 \
        -Dsonar.login=$SONAR_TOKEN
  only:
    - merge_requests
    - master
    - develop
    -
deploy-job:
  stage: deploy
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
