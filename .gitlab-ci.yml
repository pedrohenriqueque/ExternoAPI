stages:
  - build
  - test
  - sonarcloud
  - deploy
  - post-check
  - scheduled-tasks  # <-- Adicionei um estágio novo para o job agendado

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  GIT_DEPTH: "0"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip
    - .sonar/cache

build-job:
  stage: build
  rules:
    # Roda em pushes para master/develop e em merge requests
    - if: '$CI_PIPELINE_SOURCE == "push" && ($CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop")'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - echo "Compiling the code..."
    - echo "Compile complete."

test-job:
  stage: test
  image: python:3.10
  rules: # <-- REGRA ADICIONADA
    - if: '$CI_PIPELINE_SOURCE == "push" && ($CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop")'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - pip install -r requirements.txt
    - pip install pytest pytest-cov
    - pytest --cov=app --cov-report=xml
    - sed -i 's|C:/Users/Pedro/PycharmProjects/ExternoAPI/|app/|g' coverage.xml
  artifacts:
    paths:
      - coverage.xml
      - .pytest_cache/
      - app/

sonarcloud-check:
  stage: sonarcloud
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  dependencies:
    - test-job
  rules: # <-- REGRA ATUALIZADA DE 'only' PARA 'rules'
    - if: '$CI_PIPELINE_SOURCE == "push" && ($CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop")'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - |
      sonar-scanner \
        -Dsonar.projectKey=pedrohenriqueque-group_ExternoAPI \
        -Dsonar.organization=pedrohenriqueque-group \
        -Dsonar.sources=app \
        -Dsonar.python.version=3.10 \
        -Dsonar.python.coverage.reportPaths=coverage.xml \
        -Dsonar.sourceEncoding=UTF-8 \
        -Dsonar.login=$SONAR_TOKEN

render-deploy:
  stage: deploy
  image: curlimages/curl:latest
  rules: # <-- REGRA ATUALIZADA DE 'only' PARA 'rules'
    # Esta regra é mais específica: Roda somente se o gatilho for um push E a branch for master
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "master"'
  script:
    - curl -X POST "https://api.render.com/deploy/srv-d10bv549c44c73dihid0?key=4TAdh2zqfgk"

post-deploy-check:
  stage: post-check
  image: curlimages/curl
  rules: # <-- REGRA ATUALIZADA DE 'only' PARA 'rules'
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "master"'
  script:
    - echo "Verificando o endpoint após deploy no Render..."
    - sleep 20
    - curl --fail https://externoapi.onrender.com/docs || exit 1

# O seu job agendado continua com a regra correta, mas agora em seu próprio estágio
processar_fila_job:
  stage: scheduled-tasks
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  script:
    - echo "Iniciando job agendado para processar fila..."
    - curl -X POST -f https://externoapi.onrender.com/processaCobrancasEmFila
    - echo "Job concluído."